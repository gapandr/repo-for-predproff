#include <ESP8266WiFi.h>
#include "DHT.h"
#include <espnow.h>
#include <AccelStepper.h>

// параметры Wi-Fi
const char* ssid = "T104-1-2";
const char* password = "Desyatbukv10";

// Пины
#define DHTPIN D7
#define IN1 D3
#define IN2 D4
#define IN3 D5
#define IN4 D6

// Использование датчика DHT-11
#define DHTTYPE DHT11
AccelStepper stepper(AccelStepper::HALF4WIRE, IN1, IN3, IN2, IN4);
const int stepsPerRevolution = 4096;

// Инициализация датчика DHT-11
DHT dht(DHTPIN, DHTTYPE, 15);
int output_value;
int angle = 0;
int steps = 0;

/* Mac адреса других плат */
uint8_t Address3[] = {0xc4, 0x5B, 0xBE, 0x73, 0x2A, 0x86}; //esp3

/* Передаваемые данные */
typedef struct message {
    float temp;
    float hum;
    float soil;
} message;
message Data;

//Передаваемая команда
typedef struct com {
  uint8_t value;
} com;
com command;

void DataSent(uint8_t *mac_addr, uint8_t sendStatus) { //Функция при отправке данных (отладочная информация)
  Serial.print("Last Packet Send Status: ");
  if (sendStatus == 0){
    Serial.print("Delivery success to ");
  }
  else{
    Serial.print("Delivery fail to ");
  }
  Serial.println(mac_addr[0]);
}

void DataRecived(uint8_t * mac, uint8_t *incomingData, uint8_t len) //Функция для обработки принимаемой информации
{
  memcpy(&command, incomingData, sizeof(command));
  angle = command.value;
  Serial.print("from ");
  Serial.print(mac[0]);
  Serial.print(" recivied ");
  Serial.println(angle);
}

void setup() {
  // Указание инициализированного порта
  Serial.begin(115200);
  delay(10);

  // set the speed and acceleration
  stepper.setMaxSpeed(200.0);
  stepper.setAcceleration(40.0);

  // Инициализация датчика
  dht.begin();

  // Начало подключения Wi-Fi
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");  
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  esp_now_init(); //Инициилизируем протокол esp now
  esp_now_set_self_role(ESP_NOW_ROLE_COMBO); //Устанавливаем роль combo, чтобы мы могли и отправлять и принимать данные
  esp_now_register_recv_cb(DataRecived); //Устанавливаем функцию DataRecived для обработки принимаемой информации
  esp_now_add_peer(Address3, ESP_NOW_ROLE_COMBO, 1, NULL, 0); //Добавляем нового пира (esp3), чтобы мы могли отправлять данные 
  esp_now_register_send_cb(DataSent); //Устанавливаем функцию DataSent при отправке данных
}

void loop() {
  // Считывание данных с датчиков
  int h = dht.readHumidity();
  int t = dht.readTemperature();
  int s = map(analogRead(A0),1024,345,0,100); // для датчика №2

  //Записываем данные в переменную Data
  Data.temp = t;
  Data.hum = h;
  Data.soil = s;

  //Отправляем данные на esp3
  esp_now_send(Address3, (uint8_t *) &Data, sizeof(Data));

  steps = (angle/360.0)*stepsPerRevolution;
  Serial.println(steps);
  stepper.runToNewPosition(steps);
  
  // Повтор каждые 10 секунд.
  delay(10000);
}
